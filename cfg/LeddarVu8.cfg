#!/usr/bin/env python
# -*- coding: utf-8 -*-
from dynamic_reconfigure.parameter_generator_catkin import *


gen = ParameterGenerator()

gen.add('stream', bool_t, 0, 'Stream detections.', True)
gen.add('accumulation_exponent', int_t, 0, 'Exponent for the number of accumulations.', 2, min=0, max=2 ** 8)
gen.add('oversampling_exponent', int_t, 0, 'Exponent for the number of oversamplings.', 1, min=0, max=2 ** 8)
gen.add('base_samples', int_t, 0, 'Number of base sample points.', 16, min=1, max=2 ** 8)
gen.add('smoothing', int_t, 0, 'Smooth module measurements.', 0, min=-16, max=16)
gen.add('detection_threshold', double_t, 0, 'Detection threshold.', 0, min=0)
gen.add('light_source_power_percent', int_t, 0, 'Detection threshold.', 100, min=0, max=100)
gen.add('saturation_count', int_t, 0, 'Number of echoes for saturation acceptance.', 1, min=0, max=2 ** 8)
gen.add('auto_light_source_power', int_t, 0, 'Changes the delay in number of measurements.', 16, min=0, max=2 ** 16)
gen.add('auto_light_source_power_enabled', bool_t, 0, 'Automatic light source power.', True)
gen.add('demerge_object_enabled', bool_t, 0, 'Object demerging.', True)
gen.add('static_noise_removal_enabled', bool_t, 0, 'Static noise removal.', True)
gen.add('precision_enabled', bool_t, 0, 'Precision.', True)
gen.add('saturation_compenstation_enabled', bool_t, 0, 'Saturation compensation.', True)
gen.add('overshoot_management_enabled', bool_t, 0, 'Overshoot managment.', True)

exit(gen.generate('leddar_vu8', 'leddar_vu8', 'LeddarVu8'))
